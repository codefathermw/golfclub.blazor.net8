@rendermode InteractiveServer

@using GolfClub.BLL.Services.User_
@using GolfClub.DAL.Models

@inject NavigationManager NavigationManager;
@inject IUserService userService;

@if (editAction == 1)
{
    <UpdateProfile />
}
else if (editAction == 2)
{
    <UpdateContacts />
}
else if (editAction == 3)
{
    <UpdatePassword />
}
else if (User is null)
{
    <p>Please wait...</p>
}
else
{
    <div class="p-3">
        <h3 class="text-success">My Profile</h3>

        <div class="justify-content-between d-flex mb-4">
            <div class="my-3">
                <h5>@StringHelper.NotAvail(User.FirstName) @StringHelper.NotAvail(User.LastName)</h5>
                <p>@StringHelper.NotAvail(User.Address)</p>
            </div>
            <div>
                <button class="btn btn-sm btn-success" @onclick="ChangePasswordStep"><i class="bi bi-pencil"></i> Change Password</button>
            </div>
        </div>

        <hr />

        <div class="justify-content-between d-flex mb-4">
            <h5 class="text-success">Personal Information</h5>
            <button class="btn btn-sm btn-success" @onclick="EditPersonalStep"><i class="bi bi-pencil"></i> Edit</button>
        </div>

        <div class="row">
            <div class="col-5">
                <label class="text-black-50 mb-1">First Name</label>
                <p>@StringHelper.NotAvail(User.FirstName)</p>
            </div>
            <div class="col-5">
                <label class="text-black-50 mb-1">Last Name</label>
                <p>@StringHelper.NotAvail(User.LastName)</p>
            </div>
        </div>
        <div class="row">
            <div class="col-5">
                <label class="text-black-50 mb-1">Date of Birth</label>
                <p>@StringHelper.NotAvail(User.DateOfBirth).ToString()</p>
            </div>
            <div class="col-5">
                <label class="text-black-50 mb-1">Physical Address</label>
                <p>@StringHelper.NotAvail(User.Address)</p>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-5">
                <label class="text-black-50 mb-1">Golf Club Size</label>
                <p>@StringHelper.NotAvail(User.GolfClubSize)</p>
            </div>
        </div>

        <hr style="border-color: #cc!important;" />

        <div class="justify-content-between d-flex mb-4">
            <h5 class="text-success">Contact Information</h5>
            <button class="btn btn-sm btn-success" @onclick="EditContactStep"><i class="bi bi-pencil"></i> Edit</button>
        </div>

        <div class="row mb-3">
            <div class="row mb-3">
                <div class="col-5">
                    <label class="text-black-50 mb-1">Email Address</label>
                    <p>@StringHelper.NotAvail(User.Email)</p>
                </div>
                <div class="col-5">
                    <label class="text-black-50 mb-1">Phone Number</label>
                    <p>@StringHelper.NotAvail(User.Phone)</p>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int userId { get; set; }
    private UserProfile User { get; set; }
    private int editAction = 0;
    private string errorMessage = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        var response = await userService.GetUserProfile(userId);

        if (response.IsErrorOccured)
        {
            NavigationManager.NavigateTo("/error");
        }

        User = response.Result;
    }
    private void ChangePasswordStep() {
        editAction = 3;
    }
    private void EditContactStep() {
        editAction = 2;
    }
    private void EditPersonalStep() {
        editAction = 1;
    }
    private void Reset() {
        editAction = 3;
    }
}
