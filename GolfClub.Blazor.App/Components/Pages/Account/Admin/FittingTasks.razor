@page "/fitting-tasks/{RequestId:int?}"
@using GolfClub.BLL.Models
@using GolfClub.BLL.Services.Fittings
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]

@inject IFittingService fittingService
@inject NavigationManager navigationManager


<PageTitle>Manage Fitting Tasks</PageTitle>

@if (RequestId.HasValue)
{
    <h2 class="text-success mb-3">Fitting Tasks for Request No.@RequestId.Value</h2>
    <p class="mb-4">Below is a list of tasks associated with this fitting request. </p>

    <h5>Task List</h5>

        <ul class="list-group">
            @foreach (var item in fittingTasks)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <h6 class="mb-1">@item.Value</h6>
                    <button class="btn btn-outline-secondary btn-sm" @onclick="() => UpdateTask(item.Key)">Update Status</button>
                </li>
            }
        </ul>   
}
else
{
    <p class="lead">Please select a fitting request to update tasks.</p>
}

@code {
    [Parameter]
    public int? RequestId { get; set; }
    public string errorMessage { get; set; }
    
    public Dictionary<string, string> fittingTasks = new ()
        {
        {"acknowledged", "Fitting Request Acknowledged"},
        {"prepped", "Fitting being prepped"},
        {"scheduled", "Fitting Scheduled"},
        {"cancelled", "Fitting Cancelled"},
        {"suspended", "Fitting Suspended"},
        {"completed", "Fitting Completed"}
    };

    private async Task UpdateTask(string status)
    {
        if (!string.IsNullOrEmpty(status))
        {
            var response = await fittingService.UpdateFittingStatus(RequestId.Value, status);

            if (response.IsErrorOccured)
            {
                errorMessage = response.Message;
                return;
            }

            navigationManager.NavigateTo("/fitting-requests");
        }
        else
        {
            errorMessage = "Please select status to proceed";
        }
    }
}
