@page "/fitting-tasks/{RequestId:int?}"

@using GolfClub.BLL.Enums
@using GolfClub.BLL.Models
@using GolfClub.BLL.Services.Fittings
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer

@inject IFittingService fittingService
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Admin")]


<PageTitle>Manage Fitting Tasks</PageTitle>

<div class="p-3">
@if (RequestId.HasValue)
{
    <h2 class="text-success mb-3">Fitting Tasks for Request No: @RequestId.Value</h2>
    <p class="mb-4">Below is a list of tasks associated with this fitting request. </p>

    <h5 class="mb-3">Task List</h5>

    <ul class="list-group">
        @foreach (var item in fittingTasks)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <p class="mb-1 font-weight-normal">@item.Value</p>
                <button class="btn btn-outline-secondary btn-sm" @onclick="() => UpdateTask(item.Key)">Update Status</button>
            </li>
        }
    </ul>   
}
else
{
    <div class="col-12 modal-dialog-centered p-3">
        <div class="col-6 mx-auto text-center">
            <p class="lead">Please select a fitting request to update tasks.</p>
            <NavLink class="btn btn-outline-primary mx-auto text-center" href="fitting-requests">Go to Fittings Request</NavLink>
        </div>
    </div>
}
</div>

@code {
    [Parameter]
    public int? RequestId { get; set; }
    public string errorMessage { get; set; } = null!;

    public Dictionary<StatusEnum, string> fittingTasks = new ()
        {
            { StatusEnum.Acknowledged, "Fitting Request Acknowledged" },
            { StatusEnum.Prepped, "Fitting being prepped" },
            { StatusEnum.Scheduled, "Fitting Scheduled" },
            { StatusEnum.Cancelled, "Fitting Cancelled" },
            { StatusEnum.Suspended, "Fitting Suspended" },
            { StatusEnum.Completed, "Fitting Completed" }
        };

    private async Task UpdateTask(StatusEnum status)
    {
        var response = await fittingService.UpdateFittingStatusAsync(RequestId!.Value, status);

        if (response.IsErrorOccurred)
        {
            errorMessage = response.Message;
            return;
        }

        navigationManager.NavigateTo("/fitting-requests");
    }
}